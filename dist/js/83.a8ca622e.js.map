{"version":3,"file":"js/83.a8ca622e.js","mappings":"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","sources":["webpack://portfolio-website/./src/views/ProjectsPage.vue","webpack://portfolio-website/./src/views/ProjectsPage.vue?1e5e"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-50\">\n        <!-- Page Header -->\n        <section class=\"relative bg-secondary py-24\">\n            <div class=\"max-w-7xl mx-auto px-4 text-center\">\n                <h1 class=\"text-4xl md:text-5xl font-bold text-white mb-4\">My Portfolio</h1>\n                <p class=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n                    A collection of my 3D artwork, animations, and design projects created with Blender\n                </p>\n            </div>\n        </section>\n\n        <!-- Projects Grid -->\n        <section class=\"py-16 px-4\">\n            <div class=\"max-w-7xl mx-auto\">\n                <!-- Filters -->\n                <div class=\"mb-10 flex flex-wrap justify-center gap-4\">\n                    <button @click=\"activeCategory = 'all'\" class=\"px-6 py-2 rounded-full transition-colors\" :class=\"activeCategory === 'all' ?\n                        'bg-primary text-white' :\n                        'bg-gray-200 text-gray-800 hover:bg-gray-300'\">\n                        All Projects\n                    </button>\n                    <button v-for=\"category in categories\" :key=\"category.id\" @click=\"activeCategory = category.id\"\n                        class=\"px-6 py-2 rounded-full transition-colors\" :class=\"activeCategory === category.id ?\n                            'bg-primary text-white' :\n                            'bg-gray-200 text-gray-800 hover:bg-gray-300'\">\n                        {{ category.name }}\n                    </button>\n                </div>\n\n                <!-- Projects -->\n                <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n                    <div v-for=\"project in filteredProjects\" :key=\"project.id\"\n                        class=\"bg-white rounded-lg overflow-hidden shadow-lg transition-transform duration-300 hover:transform hover:scale-105\">\n                        <div class=\"relative pb-[56.25%] overflow-hidden\">\n                            <img :src=\"project.thumbnail\" :alt=\"project.title\"\n                                class=\"absolute inset-0 w-full h-full object-cover\" loading=\"lazy\" />\n                        </div>\n                        <div class=\"p-6\">\n                            <div class=\"flex justify-between items-start mb-2\">\n                                <h3 class=\"text-xl font-bold\">{{ project.title }}</h3>\n                                <span class=\"px-2 py-1 text-xs font-medium rounded-full\"\n                                    :class=\"getCategoryClass(project.category)\">\n                                    {{ getCategoryName(project.category) }}\n                                </span>\n                            </div>\n                            <p class=\"text-gray-600 mb-4\">{{ project.description }}</p>\n                            <router-link :to=\"`/projects/${project.id}`\"\n                                class=\"inline-block text-primary hover:text-primary-dark font-medium\">\n                                View Project â†’\n                            </router-link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { getImage } from '@/services/mediaService';\n\nexport default {\n    name: 'ProjectsPage',\n    setup() {\n        const projects = ref([]);\n        const activeCategory = ref('all');\n        const loadedProjects = ref(new Set());\n\n        const categories = [\n            { id: 'character', name: 'Characters', color: 'bg-blue-100 text-blue-800' },\n            { id: 'environment', name: 'Environments', color: 'bg-green-100 text-green-800' },\n            { id: 'animation', name: 'Animations', color: 'bg-purple-100 text-purple-800' },\n            { id: 'poster', name: 'Posters', color: 'bg-yellow-100 text-yellow-800' }\n        ];\n\n        // Filter projects by active category\n        const filteredProjects = computed(() => {\n            if (activeCategory.value === 'all') {\n                return projects.value;\n            }\n            return projects.value.filter(project => project.category === activeCategory.value);\n        });\n\n        // Watch filtered projects and load their images if not already loaded\n        watch(filteredProjects, async (newProjects) => {\n            // Load thumbnails for newly visible projects\n            for (const project of newProjects) {\n                if (!loadedProjects.value.has(project.id)) {\n                    loadedProjects.value.add(project.id);\n                    if (project.images && project.images.length > 0) {\n                        project.thumbnail = await getImage(project.images[0], null, { lazy: true });\n                    }\n                }\n            }\n        }, { immediate: false });\n\n        const getCategoryName = (categoryId) => {\n            const category = categories.find(c => c.id === categoryId);\n            return category ? category.name : 'Other';\n        };\n\n        const getCategoryClass = (categoryId) => {\n            const category = categories.find(c => c.id === categoryId);\n            return category ? category.color : 'bg-gray-100 text-gray-800';\n        };\n\n        // Initialize only the projects we need immediately\n        const loadInitialThumbnails = async (projects, limit = 6) => {\n            // Load first batch of thumbnails immediately - these are above the fold\n            const initialProjects = projects.slice(0, limit);\n            for (const project of initialProjects) {\n                if (project.images && project.images.length > 0) {\n                    loadedProjects.value.add(project.id);\n                    project.thumbnail = await getImage(project.images[0]);\n                }\n            }\n\n            // Then load the rest with lazy loading\n            setTimeout(() => {\n                projects.slice(limit).forEach(async project => {\n                    if (project.images && project.images.length > 0 && !loadedProjects.value.has(project.id)) {\n                        loadedProjects.value.add(project.id);\n                        project.thumbnail = await getImage(project.images[0], null, { lazy: true });\n                    }\n                });\n            }, 200);\n        };\n\n        onMounted(async () => {\n            // Load project data\n            await loadProjects();\n\n            // Load initial thumbnails\n            await loadInitialThumbnails(projects.value);\n        });\n\n        const loadProjects = async () => {\n            try {\n                // Define projects array with placeholder images\n                projects.value = [\n                    {\n                        id: 1,\n                        title: 'The Wachters',\n                        category: 'character',\n                        thumbnail: null,\n                        description: 'A detailed character design showcasing my skills in creating realistic 3D models.',\n                        images: ['Characters/De Wachters.jpg'],\n                        videos: [],\n                        fullDescription: 'The Wachters is a character design project focused on creating a mysterious guardian figure. This project highlights my expertise in character modeling, texturing, and rendering in Blender.'\n                    },\n                    {\n                        id: 2,\n                        title: 'ROBOTOAD',\n                        category: 'character',\n                        thumbnail: null,\n                        description: 'An adventurous journey into sci-fi world-building with unique character designs.',\n                        images: ['Characters/ROBOTOAD character design.jpg', 'Characters/Skylander character design  kopie.jpg'],\n                        videos: ['2.mp4'],\n                        fullDescription: 'ROBOTOAD combines organic and mechanical elements in a unique character design. This project explores the intersection of nature and technology through detailed modeling and texturing techniques.'\n                    },\n                    {\n                        id: 3,\n                        title: 'Curse of the Cliffs',\n                        category: 'poster',\n                        thumbnail: null,\n                        description: 'Environmental storytelling through intricate landscapes and atmospheric lighting.',\n                        images: ['Posters/Poster Curse of the cliffs Artistiek dossier kopie.jpg', 'Backgrounds/Achtergrond longshot (1) kopie.jpg'],\n                        videos: [],\n                        fullDescription: 'This poster for \"Curse of the Cliffs\" showcases my ability to create dramatic environments with compelling atmosphere and lighting that tells a story through visual elements alone.'\n                    },\n                    {\n                        id: 4,\n                        title: 'Liver and Bone',\n                        category: 'poster',\n                        thumbnail: null,\n                        description: 'Experimental project playing with organic forms and textures.',\n                        images: ['Posters/Poster Liver and Bone.jpg'],\n                        videos: [],\n                        fullDescription: 'Liver and Bone is an artistic exploration of organic textures and forms, pushing the boundaries of what can be achieved with Blender\\'s material system and lighting techniques.'\n                    },\n                    {\n                        id: 5,\n                        title: 'Monster Animation',\n                        category: 'animation',\n                        thumbnail: null,\n                        description: 'Character animation showcasing movement and personality.',\n                        images: ['Characters/Het Monster.jpg'],\n                        videos: ['1.mp4', '3.mp4'],\n                        fullDescription: 'This animation project focuses on bringing characters to life through fluid movement and expressive actions, demonstrating my skills in rigging and animation within Blender.'\n                    },\n                    {\n                        id: 6,\n                        title: 'Tower Room',\n                        category: 'environment',\n                        thumbnail: null,\n                        description: 'Detailed interior environment with rich textures and lighting.',\n            images: ['Backgrounds/render torenkamer .jpg'],\n            videos: ['4.mp4'],\n            fullDescription: 'The Tower Room is an environment design project featuring intricate architectural details, custom textures, and dramatic lighting that creates a mysterious atmosphere.'\n          },\n          {\n            id: 7,\n            title: 'Frog Background Series',\n            category: 'environment',\n            thumbnail: null,\n            description: 'Series showing my environment design process from concept to completion.',\n            images: [\n              'Backgrounds/BACKGROUND_FROG (schets) kopie.jpg',\n              'Backgrounds/BACKGROUND_FROG (lineart) kopie.jpg',\n              'Backgrounds/BACKGROUND_FROG (kleur) kopie.jpg',\n              'Backgrounds/BACKGROUND_FROG (finished) kopie.jpg'\n            ],\n            videos: [],\n            fullDescription: 'This series documents my complete workflow from initial sketch to final render, demonstrating how I approach environment design and development in Blender.'\n          }\n        ];\n      } catch (error) {\n        console.error('Error loading projects:', error);\n      }\n    };\n    \n    return {\n      projects,\n      filteredProjects,\n      activeCategory,\n      categories,\n      getCategoryName,\n      getCategoryClass\n    };\n  }\n}\n</script>","import { render } from \"./ProjectsPage.vue?vue&type=template&id=2f643606\"\nimport script from \"./ProjectsPage.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectsPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","$setup","activeCategory","_normalizeClass","_Fragment","_renderList","categories","category","key","id","name","_hoisted_5","_hoisted_6","filteredProjects","project","_hoisted_7","src","thumbnail","alt","title","loading","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","getCategoryClass","getCategoryName","_hoisted_12","description","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","setup","projects","ref","loadedProjects","Set","color","computed","value","filter","watch","async","newProjects","has","add","images","length","getImage","lazy","immediate","categoryId","find","c","loadInitialThumbnails","limit","initialProjects","slice","setTimeout","forEach","onMounted","loadProjects","videos","fullDescription","error","console","__exports__","render"],"sourceRoot":""}